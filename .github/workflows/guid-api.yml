name: Build and deploy .NET Core application to Function App guid-api
on:
  push:
    branches:
      - main
    paths-ignore:
      - "src/static-site/**"
env:
  AZURE_FUNCTIONAPP_NAME_EU1: guidapi-prod-weu-app
  AZURE_FUNCTIONAPP_NAME_US1: guidapi-prod-wus-app
  AZURE_FUNCTIONAPP_NAME_AU1: guidapi-prod-aus-app
  AZURE_RESOURCEGROUP_NAME_EU1: guidapi-prod-weu
  AZURE_RESOURCEGROUP_NAME_US1: guidapi-prod-wus
  AZURE_RESOURCEGROUP_NAME_AU1: guidapi-prod-aus
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
  AZURE_STATIC_SITE_STORAGE_ACCOUNT: "guidapistaticprodweu.blob.core.windows.net"
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 3.1.x
  WORKING_DIRECTORY: src
  DOTNET_CORE_VERSION_INPROC: ""
jobs:
  compile-functions-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core ${{ env.DOTNET_CORE_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Setup .NET Core (for inproc extensions)
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION_INPROC }}

      - name: Dotnet restore
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

      - name: Dotnet build
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Dotnet publish
        run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"

      - name: "Zip published content"
        uses: papeloto/action-zip@v1
        with:
          files: ./output/
          recursive: true
          dest: artifact.zip

      - name: Publish Functions artifact
        uses: actions/upload-artifact@v2
        with:
          name: functions-artifact
          path: artifact.zip

  publish-bicep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: bicep-templates
          path: deployment/infrastructure/

  infrastructure-incremental:
    needs: publish-bicep
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: bicep-templates
          path: ./infrastructure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}

      - name: Deploy Infrastructure
        id: deployinfrastructure
        uses: Azure/cli@1.0.4
        with:
          inlineScript: az deployment sub create --location WestEurope --template-file ./infrastructure/main.bicep --parameters ./infrastructure/parameters.json

  deploy-functions-dev:
    needs: [compile-functions-app, infrastructure-incremental]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: functions-artifact
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV }}

      - name: "Deploy web app - EU1"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_EU1 }}
          package: "artifact.zip"

      - name: "Deploy web app - US1"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_US1 }}
          package: "artifact.zip"

      - name: "Deploy web app - AU1"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_AU1 }}
          package: "artifact.zip"
